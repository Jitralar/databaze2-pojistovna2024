-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2024-11-05 17:18:10 SEÈ
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adresa (
    id_adresa        NUMBER NOT NULL,
    ulice            VARCHAR2(32) NOT NULL,
    cislo_orientacni VARCHAR2(32),
    cislo_popisne    VARCHAR2(32) NOT NULL,
    mesto            VARCHAR2(32) NOT NULL,
    psc              CHAR(5) NOT NULL,
    patro            NUMBER,
    kraj_id_kraj     NUMBER
);

ALTER TABLE adresa ADD CONSTRAINT adresa_pk PRIMARY KEY ( id_adresa );

CREATE TABLE banka (
    id_banka           NUMBER NOT NULL,
    nazev              VARCHAR2(32) NOT NULL,
    adresa_id_adresa   NUMBER NOT NULL,
    kontakt_id_kontakt NUMBER,
    telefon            CHAR(9),
    klient_id_klient   NUMBER
);

ALTER TABLE banka ADD CONSTRAINT banka_pk PRIMARY KEY ( id_banka );

CREATE TABLE fotodokumentace (
    id_fotodokumentace        NUMBER NOT NULL,
    fotografie                BLOB NOT NULL,
    pojistka_poj_id_pojisteni NUMBER NOT NULL
);

ALTER TABLE fotodokumentace ADD CONSTRAINT fotodokumentace_pk PRIMARY KEY ( id_fotodokumentace,
                                                                            pojistka_poj_id_pojisteni );

CREATE TABLE kategorie_majetek (
    id_kategorie_majetku NUMBER NOT NULL,
    nazev_kategorie      VARCHAR2(255) NOT NULL
);

ALTER TABLE kategorie_majetek ADD CONSTRAINT kategorie_majetek_pk PRIMARY KEY ( id_kategorie_majetku );

CREATE TABLE klient (
    id_klient          NUMBER NOT NULL,
    jmeno              VARCHAR2(32) NOT NULL,
    druhe_jmeno        VARCHAR2(32),
    prijmeni           VARCHAR2(32) NOT NULL,
    datum_narozeni     DATE NOT NULL,
    prijem             NUMBER NOT NULL,
    adresa_id_adresa   NUMBER,
    kontakt_id_kontakt NUMBER,
    banka_id_banka     NUMBER,
    id_kontakt         NUMBER
);

ALTER TABLE klient ADD CONSTRAINT klient_pk PRIMARY KEY ( id_klient );

CREATE TABLE kontakt (
    id_kontakt NUMBER NOT NULL,
    telefon    CHAR(9),
    mobil      CHAR(9),
    email      VARCHAR2(64)
);

ALTER TABLE kontakt ADD CONSTRAINT kontakt_pk PRIMARY KEY ( id_kontakt );

CREATE TABLE kraj (
    id_kraj       NUMBER NOT NULL,
    nazev_kraje   VARCHAR2(255) NOT NULL,
    krajske_mesto VARCHAR2(255) NOT NULL
);

ALTER TABLE kraj ADD CONSTRAINT kraj_pk PRIMARY KEY ( id_kraj );

CREATE TABLE majetkove_pojisteni (
    id_poj_pojisteni       NUMBER NOT NULL,
    maj_id_majetek         NUMBER NOT NULL,
    maj_popis              VARCHAR2(255) NOT NULL,
    maj_vyrobeno_v_roce    DATE,
    kat_maj_id_kat_majetku NUMBER
);

ALTER TABLE majetkove_pojisteni ADD CONSTRAINT majetkove_pojisteni_pk PRIMARY KEY ( id_poj_pojisteni );

ALTER TABLE majetkove_pojisteni ADD CONSTRAINT majetek_pojisteni_pk UNIQUE ( maj_id_majetek );

CREATE TABLE pobocka (
    id_pobocka        NUMBER NOT NULL,
    pocet_zamestnancu NUMBER,
    nazev             VARCHAR2(32) NOT NULL,
    adresa_id_adresa  NUMBER
);

ALTER TABLE pobocka ADD CONSTRAINT pobocka_pk PRIMARY KEY ( id_pobocka );

CREATE TABLE pohledavka (
    id_pov_povinosti  NUMBER NOT NULL,
    poh_id_pohledavka NUMBER NOT NULL,
    poh_popis         VARCHAR2(255)
);

ALTER TABLE pohledavka ADD CONSTRAINT pohledavka_pk PRIMARY KEY ( id_pov_povinosti );

ALTER TABLE pohledavka ADD CONSTRAINT pohledavka_pkv1 UNIQUE ( poh_id_pohledavka );

CREATE TABLE pojistka (
    poj_id_pojisteni           NUMBER NOT NULL,
    poj_datum_sjednani         DATE NOT NULL,
    poj_poznamka               VARCHAR2(255),
    poj_pojisteno_do_hodnoty   VARCHAR2(4000),
    poj_cena_mesicne           VARCHAR2(4000),
    povinosti_id_pov_povinosti NUMBER NOT NULL,
    poj_id_arc                 CHAR(1) NOT NULL
);

ALTER TABLE pojistka ADD CONSTRAINT pojistka_pk PRIMARY KEY ( poj_id_pojisteni );

CREATE TABLE pojistka_klient (
    poj_id_pojisteni NUMBER NOT NULL,
    kli_id_klient    NUMBER NOT NULL,
    id_st_poj_kli    NUMBER NOT NULL
);

ALTER TABLE pojistka_klient
    ADD CONSTRAINT pojistka_klient_pk PRIMARY KEY ( poj_id_pojisteni,
                                                    kli_id_klient,
                                                    id_st_poj_kli );

CREATE TABLE povinosti (
    pov_id_povinosti     NUMBER NOT NULL,
    pov_datum_vytvoreni  DATE NOT NULL,
    pov_datum_zplatnosti DATE,
    pov_id_arc           CHAR(1) NOT NULL
);

ALTER TABLE povinosti ADD CONSTRAINT povinosti_pk PRIMARY KEY ( pov_id_povinosti );

CREATE TABLE pozice (
    id_pozice NUMBER NOT NULL,
    nazev     VARCHAR2(32) NOT NULL,
    popis     VARCHAR2(255),
    plat      NUMBER NOT NULL
);

ALTER TABLE pozice ADD CONSTRAINT pozice_pk PRIMARY KEY ( id_pozice );

CREATE TABLE pripojisteni (
    id_poj_pojisteni           NUMBER NOT NULL,
    pri_id_pripojisteni        NUMBER NOT NULL,
    pri_druh                   VARCHAR2(255),
    pri_plati_pouze_ve_statech VARCHAR2(255),
    pri_cena_pripojisteni      VARCHAR2(4000) NOT NULL
);

ALTER TABLE pripojisteni ADD CONSTRAINT pripojisteni_pk PRIMARY KEY ( id_poj_pojisteni );

ALTER TABLE pripojisteni ADD CONSTRAINT pripojisteni_pkv1 UNIQUE ( pri_id_pripojisteni );

CREATE TABLE secret (
    id_secret          NUMBER NOT NULL,
    token              VARCHAR2(255) NOT NULL,
    kontakt_id_kontakt NUMBER NOT NULL
);

COMMENT ON COLUMN secret.token IS
    'token is used for store 2fa connection string, dont forget to hash';

CREATE UNIQUE INDEX secret__idx ON
    secret (
        kontakt_id_kontakt
    ASC );

ALTER TABLE secret ADD CONSTRAINT secret_pk PRIMARY KEY ( id_secret );

CREATE TABLE urazove_pojisteni (
    id_poj_pojisteni   NUMBER NOT NULL,
    ura_id_uraz        NUMBER NOT NULL,
    ura_druh_urazu     VARCHAR2(255),
    ura_datum_narozeni DATE,
    ura_alergie        VARCHAR2(255)
);

ALTER TABLE urazove_pojisteni ADD CONSTRAINT urazove_pojisteni_pk PRIMARY KEY ( id_poj_pojisteni );

ALTER TABLE urazove_pojisteni ADD CONSTRAINT urazove_pojisteni_pkv1 UNIQUE ( ura_id_uraz );

CREATE TABLE zamestnanec (
    id_zam             NUMBER NOT NULL,
    jmeno              VARCHAR2(32) NOT NULL,
    druhe_jmeno        VARCHAR2(32),
    prijmeni           VARCHAR2(32) NOT NULL,
    adresa_id_adresa   NUMBER,
    pozice_id_pozice   NUMBER NOT NULL,
    kontakt_id_kontakt NUMBER
);

ALTER TABLE zamestnanec ADD CONSTRAINT zamestnanec_pk PRIMARY KEY ( id_zam );

CREATE TABLE zamestnanec_pobocka (
    zam_id_zam     NUMBER NOT NULL,
    pob_id_pobocka NUMBER NOT NULL,
    id_st_zam_pob  NUMBER NOT NULL
);

ALTER TABLE zamestnanec_pobocka
    ADD CONSTRAINT zamestnanec_pobocka_pk PRIMARY KEY ( zam_id_zam,
                                                        pob_id_pobocka,
                                                        id_st_zam_pob );

CREATE TABLE zamestnanec_pojistka (
    zam_id_zam       NUMBER NOT NULL,
    poj_id_pojisteni NUMBER NOT NULL,
    id_st_zam_poj    NUMBER NOT NULL
);

ALTER TABLE zamestnanec_pojistka
    ADD CONSTRAINT zamestnanec_pojistka_pk PRIMARY KEY ( zam_id_zam,
                                                         poj_id_pojisteni,
                                                         id_st_zam_poj );

CREATE TABLE zavazek (
    id_pov_povinosti NUMBER NOT NULL,
    zav_id_zavazek   NUMBER NOT NULL,
    zav_popis        VARCHAR2(255) NOT NULL
);

ALTER TABLE zavazek ADD CONSTRAINT zavazek_pk PRIMARY KEY ( id_pov_povinosti );

ALTER TABLE zavazek ADD CONSTRAINT zavazek_pkv1 UNIQUE ( zav_id_zavazek );

ALTER TABLE adresa
    ADD CONSTRAINT adresa_kraj_fk FOREIGN KEY ( kraj_id_kraj )
        REFERENCES kraj ( id_kraj );

ALTER TABLE banka
    ADD CONSTRAINT banka_adresa_fk FOREIGN KEY ( adresa_id_adresa )
        REFERENCES adresa ( id_adresa );

ALTER TABLE banka
    ADD CONSTRAINT banka_klient_fk FOREIGN KEY ( klient_id_klient )
        REFERENCES klient ( id_klient );

ALTER TABLE banka
    ADD CONSTRAINT banka_kontakt_fk FOREIGN KEY ( kontakt_id_kontakt )
        REFERENCES kontakt ( id_kontakt );

ALTER TABLE fotodokumentace
    ADD CONSTRAINT fotodokumentace_pojistka_fk FOREIGN KEY ( pojistka_poj_id_pojisteni )
        REFERENCES pojistka ( poj_id_pojisteni );

ALTER TABLE klient
    ADD CONSTRAINT kli_banka_fk FOREIGN KEY ( banka_id_banka )
        REFERENCES banka ( id_banka );

ALTER TABLE klient
    ADD CONSTRAINT klient_adresa_fk FOREIGN KEY ( adresa_id_adresa )
        REFERENCES adresa ( id_adresa );

ALTER TABLE klient
    ADD CONSTRAINT klient_kontakt_fk FOREIGN KEY ( kontakt_id_kontakt )
        REFERENCES kontakt ( id_kontakt );

ALTER TABLE majetkove_pojisteni
    ADD CONSTRAINT maj_poj_kat_maj_fk FOREIGN KEY ( kat_maj_id_kat_majetku )
        REFERENCES kategorie_majetek ( id_kategorie_majetku );

ALTER TABLE majetkove_pojisteni
    ADD CONSTRAINT maj_poj_pojistka_fk FOREIGN KEY ( id_poj_pojisteni )
        REFERENCES pojistka ( poj_id_pojisteni );

ALTER TABLE pobocka
    ADD CONSTRAINT pobocka_adresa_fk FOREIGN KEY ( adresa_id_adresa )
        REFERENCES adresa ( id_adresa );

ALTER TABLE pohledavka
    ADD CONSTRAINT poh_povinosti_fk FOREIGN KEY ( id_pov_povinosti )
        REFERENCES povinosti ( pov_id_povinosti );

ALTER TABLE pojistka_klient
    ADD CONSTRAINT poj_kli_klient_fk FOREIGN KEY ( kli_id_klient )
        REFERENCES klient ( id_klient );

ALTER TABLE pojistka_klient
    ADD CONSTRAINT poj_kli_pojistka_fk FOREIGN KEY ( poj_id_pojisteni )
        REFERENCES pojistka ( poj_id_pojisteni );

ALTER TABLE pojistka
    ADD CONSTRAINT pojistka_povinosti_fk FOREIGN KEY ( povinosti_id_pov_povinosti )
        REFERENCES povinosti ( pov_id_povinosti );

ALTER TABLE pripojisteni
    ADD CONSTRAINT pri_pojistka_fk FOREIGN KEY ( id_poj_pojisteni )
        REFERENCES pojistka ( poj_id_pojisteni );

ALTER TABLE secret
    ADD CONSTRAINT secret_kontakt_fk FOREIGN KEY ( kontakt_id_kontakt )
        REFERENCES kontakt ( id_kontakt );

ALTER TABLE urazove_pojisteni
    ADD CONSTRAINT ura_poj_pojistka_fk FOREIGN KEY ( id_poj_pojisteni )
        REFERENCES pojistka ( poj_id_pojisteni );

ALTER TABLE zamestnanec_pobocka
    ADD CONSTRAINT zam_pob_pobocka_fk FOREIGN KEY ( pob_id_pobocka )
        REFERENCES pobocka ( id_pobocka );

ALTER TABLE zamestnanec_pobocka
    ADD CONSTRAINT zam_pob_zamestnanec_fk FOREIGN KEY ( zam_id_zam )
        REFERENCES zamestnanec ( id_zam );

ALTER TABLE zamestnanec_pojistka
    ADD CONSTRAINT zam_poj_pojistka_fk FOREIGN KEY ( poj_id_pojisteni )
        REFERENCES pojistka ( poj_id_pojisteni );

ALTER TABLE zamestnanec_pojistka
    ADD CONSTRAINT zam_poj_zamestnanec_fk FOREIGN KEY ( zam_id_zam )
        REFERENCES zamestnanec ( id_zam );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_adresa_fk FOREIGN KEY ( adresa_id_adresa )
        REFERENCES adresa ( id_adresa );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_kontakt_fk FOREIGN KEY ( kontakt_id_kontakt )
        REFERENCES kontakt ( id_kontakt );

ALTER TABLE zamestnanec
    ADD CONSTRAINT zamestnanec_pozice_fk FOREIGN KEY ( pozice_id_pozice )
        REFERENCES pozice ( id_pozice );

ALTER TABLE zavazek
    ADD CONSTRAINT zav_povinosti_fk FOREIGN KEY ( id_pov_povinosti )
        REFERENCES povinosti ( pov_id_povinosti );

CREATE OR REPLACE TRIGGER arc_fkarc__majetkove_pojisteni BEFORE
    INSERT OR UPDATE OF id_poj_pojisteni ON majetkove_pojisteni
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.poj_id_arc
    INTO d
    FROM
        pojistka a
    WHERE
        a.poj_id_pojisteni = :new.id_poj_pojisteni;

    IF ( d IS NULL OR d <> 'm' ) THEN
        raise_application_error(-20223, 'FK MAJ_POJ_POJISTKA_FK in Table MAJETKOVE_POJISTENI violates Arc constraint on Table POJISTKA - discriminator column POJ_ID_arc doesn''t have value ''m'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_pripojisteni BEFORE
    INSERT OR UPDATE OF id_poj_pojisteni ON pripojisteni
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.poj_id_arc
    INTO d
    FROM
        pojistka a
    WHERE
        a.poj_id_pojisteni = :new.id_poj_pojisteni;

    IF ( d IS NULL OR d <> 'p' ) THEN
        raise_application_error(-20223, 'FK PRI_POJISTKA_FK in Table PRIPOJISTENI violates Arc constraint on Table POJISTKA - discriminator column POJ_ID_arc doesn''t have value ''p'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_urazove_pojisteni BEFORE
    INSERT OR UPDATE OF id_poj_pojisteni ON urazove_pojisteni
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.poj_id_arc
    INTO d
    FROM
        pojistka a
    WHERE
        a.poj_id_pojisteni = :new.id_poj_pojisteni;

    IF ( d IS NULL OR d <> 'u' ) THEN
        raise_application_error(-20223, 'FK URA_POJ_POJISTKA_FK in Table URAZOVE_POJISTENI violates Arc constraint on Table POJISTKA - discriminator column POJ_ID_arc doesn''t have value ''u'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_pohledavka BEFORE
    INSERT OR UPDATE OF id_pov_povinosti ON pohledavka
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.pov_id_arc
    INTO d
    FROM
        povinosti a
    WHERE
        a.pov_id_povinosti = :new.id_pov_povinosti;

    IF ( d IS NULL OR d <> 'p' ) THEN
        raise_application_error(-20223, 'FK POH_POVINOSTI_FK in Table POHLEDAVKA violates Arc constraint on Table POVINOSTI - discriminator column POV_ID_arc doesn''t have value ''p'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_zavazek BEFORE
    INSERT OR UPDATE OF id_pov_povinosti ON zavazek
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.pov_id_arc
    INTO d
    FROM
        povinosti a
    WHERE
        a.pov_id_povinosti = :new.id_pov_povinosti;

    IF ( d IS NULL OR d <> 'z' ) THEN
        raise_application_error(-20223, 'FK ZAV_POVINOSTI_FK in Table ZAVAZEK violates Arc constraint on Table POVINOSTI - discriminator column POV_ID_arc doesn''t have value ''z'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            21
-- CREATE INDEX                             1
-- ALTER TABLE                             52
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
